[{"C:\\Users\\Basit_Amin\\unitgenerator\\src\\index.js":"1","C:\\Users\\Basit_Amin\\unitgenerator\\src\\App.js":"2","C:\\Users\\Basit_Amin\\unitgenerator\\src\\reportWebVitals.js":"3","C:\\Users\\Basit_Amin\\unitgenerator\\src\\constraints.js":"4"},{"size":535,"mtime":1669705010682,"results":"5","hashOfConfig":"6"},{"size":7612,"mtime":1670320785136,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1669705011039,"results":"8","hashOfConfig":"6"},{"size":12477,"mtime":1670309191136,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"p09lup",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Basit_Amin\\unitgenerator\\src\\index.js",[],[],[],"C:\\Users\\Basit_Amin\\unitgenerator\\src\\App.js",["24","25","26","27","28","29","30","31","32","33","34","35","36","37","38"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport ms from \"milsymbol\";\nimport {\n  Coding_Scheme,\n  AffiliationData,\n  StatusData,\n  warFighting,\n  TacticalGrapics,\n  SignalIntelligence,\n  stabilityOperation,\n  emeergencyManagement,\n} from \"./constraints\";\nimport \"./App.css\";\n\nfunction App() {\n  const [id, setId] = useState(\"\");\n  const [dataProcess, setDataProcess] = useState([]);\n  const [functionunit, setFunctionunit] = useState([]);\n  const [image, setImage] = useState(null);\n  const [defaultfunction, setDefaultfunction] = useState(\"\");\n  const [scheme, setScheme] = useState(\"\");\n  const [affliation, setAffliation] = useState(\"\");\n  const [battel, setBattel] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [functions, setFunctions] = useState(\"\");\n  const [modifier1, setModifier1] = useState(\"-\");\n  const [modifier2, setModifier2] = useState(\"-\");\n  const [show, setShow] = useState(true);\n\n  const refscheme = useRef();\n  const refaffliation = useRef();\n  const refbattel = useRef();\n  const refstatus = useRef();\n  const reffunctions = useRef();\n\n  const handleScheme = (e) => {\n    if (e.target.value == \"\") {\n      setShow(false);\n    } else {\n      setScheme(refscheme.current.value);\n      setAffliation(\"\");\n      refaffliation.current.value = \"\";\n      setBattel(\"\");\n      refbattel.current.value = \"\";\n      setStatus(\"\");\n      refstatus.current.value = \"\";\n      setFunctions(\"\");\n      reffunctions.current.value = \"\";\n    }\n  };\n\n  const handleAffliation = (e) => {\n    if (e.target.value == \"\") {\n      setShow(false);\n    } else {\n      setAffliation(refaffliation.current.value);\n      setBattel(\"\");\n      refbattel.current.value = \"\";\n      setStatus(\"\");\n      refstatus.current.value = \"\";\n      setFunctions(\"\");\n      reffunctions.current.value = \"\";\n      setShow(false);\n    }\n  };\n\n  const handleBattel = (e) => {\n    if (e.target.value == \"\") {\n      setShow(false);\n    } else {\n      setBattel(refbattel.current.value);\n      setStatus(\"\");\n      refstatus.current.value = \"\";\n      setFunctions(\"\");\n      reffunctions.current.value = \"\";\n    }\n  };\n\n  const handleStatus = (e) => {\n    if (e.target.value == \"\") {\n      setShow(false);\n    } else {\n      setStatus(refstatus.current.value);\n      setFunctions(\"\");\n      reffunctions.current.value = \"\";\n      setShow(false);\n    }\n  };\n\n  const handlefunctions = (e) => {\n    // setFunctions(e.target.value);\n    if (e.target.value == \"\") {\n      setShow(false);\n    } else {\n      setFunctions(reffunctions.current.value);\n\n      if (\n        scheme !== \"\" &&\n        affliation !== \"\" &&\n        battel !== \"\" &&\n        status !== \"\" &&\n        functions !== \"\"\n      ) {\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (\n      scheme !== \"\" &&\n      affliation !== \"\" &&\n      battel !== \"\" &&\n      status !== \"\" &&\n      functions !== \"\"\n    ) {\n      setShow(true);\n    } else {\n      setShow(false);\n    }\n  }, [functions]);\n\n  useEffect(() => {\n    setShow(false);\n    switch (scheme) {\n      case \"S\":\n        setDataProcess(warFighting);\n        //  handlebattelvalue()\n        break;\n      case \"G\":\n        setDataProcess(TacticalGrapics);\n        break;\n      case \"I\":\n        setDataProcess(SignalIntelligence);\n        break;\n      case \"O\":\n        setDataProcess(stabilityOperation);\n        break;\n      case \"E\":\n        setDataProcess(emeergencyManagement);\n        break;\n      default:\n        setDataProcess([]);\n    }\n  }, [scheme]);\n\n  useEffect(() => {\n    refbattel.current.value = \"\";\n    reffunctions.current.value = \"\";\n  }, [dataProcess]);\n\n  useEffect(() => {\n    reffunctions.current.value = \"\";\n    setShow(false);\n  }, [functionunit]);\n\n  useEffect(() => {\n    {\n      let srt1 = scheme + affliation + battel + status + functions;\n      let length = srt1.length;\n      let length2 = 10 - length;\n      for (let i = 1; i <= length2; i++) {\n        srt1 += \"-\";\n      }\n\n      let srt2 = srt1 + modifier1 + modifier2;\n      setId(srt2);\n      console.log(\"type \", typeof srt2);\n      let a = new ms.Symbol(srt2, {\n        size: 35,\n      }).asSVG();\n      setImage(a);\n    }\n  }, [scheme, affliation, battel, status, functions]);\n\n  useEffect(() => {\n    dataProcess?.map((item, i) => {\n      if (item.value == battel) {\n        setFunctionunit(item.children);\n      }\n    });\n  }, [battel]);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h2>{id}</h2>\n        {show ? (\n          <div dangerouslySetInnerHTML={{ __html: image }}></div>\n        ) : (\n          <div>\n            <h2>Please Select all option</h2>\n          </div>\n        )}\n      </div>\n      <form>\n        <div className=\"formData\">\n          <label htmlFor=\"scheme\">Coding Scheme:</label>\n          <select\n            name=\"scheme\"\n            ref={refscheme}\n            onChange={(e) => handleScheme(e)}\n          >\n            <option value=\"\" disabled selected>\n              please select\n            </option>\n            {Coding_Scheme?.map((items, i) => {\n              return (\n                <option value={items?.value} id={items?.id}>\n                  {items?.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"formData\">\n          <label htmlFor=\"affliation\">Affiliation:</label>\n          <select\n            name=\"affliation\"\n            id=\"affliation\"\n            ref={refaffliation}\n            onChange={(e) => handleAffliation(e)}\n          >\n            <option value=\"\" disabled selected>\n              please select\n            </option>\n            {AffiliationData.map((item) => {\n              return <option value={item?.value}>{item?.name}</option>;\n            })}\n          </select>\n        </div>\n        <div className=\"formData\">\n          <label htmlFor=\"battle\">Battle Dimension:</label>\n          <select\n            name=\"battle\"\n            id=\"battle\"\n            ref={refbattel}\n            onChange={(e) => handleBattel(e)}\n          >\n            <option value=\"\" disabled selected>\n              please select\n            </option>\n\n            {dataProcess.map((item) => (\n              <option value={item?.value}>{item?.name}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"formData\">\n          <label htmlFor=\"status\">Status:</label>\n          <select\n            name=\"status\"\n            id=\"status\"\n            ref={refstatus}\n            onChange={(e) => handleStatus(e)}\n          >\n            <option value=\"\" disabled selected>\n              please select\n            </option>\n\n            {StatusData.map((item) => {\n              return <option value={item?.value}>{item?.name}</option>;\n            })}\n          </select>\n        </div>\n        <div className=\"formData\">\n          <label htmlFor=\"function\">Function ID:</label>\n          <select\n            name=\"function\"\n            id=\"function\"\n            ref={reffunctions}\n            onChange={(e) => handlefunctions(e)}\n          >\n            <option value=\"\" disabled selected>\n              please select\n            </option>\n            {functionunit.map((item) => (\n              <option value={item?.value}>{item?.name}</option>\n            ))}\n          </select>\n        </div>\n\n        {show ? (\n          <div>\n            {\" \"}\n            <button type=\"button\" className=\"btn btn-primary submitbutton\">\n              Submit\n            </button>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Basit_Amin\\unitgenerator\\src\\reportWebVitals.js",[],[],"C:\\Users\\Basit_Amin\\unitgenerator\\src\\constraints.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":20,"column":10,"nodeType":"41","messageId":"42","endLine":20,"endColumn":25},{"ruleId":"39","severity":1,"message":"43","line":20,"column":27,"nodeType":"41","messageId":"42","endLine":20,"endColumn":45},{"ruleId":"39","severity":1,"message":"44","line":26,"column":21,"nodeType":"41","messageId":"42","endLine":26,"endColumn":33},{"ruleId":"39","severity":1,"message":"45","line":27,"column":21,"nodeType":"41","messageId":"42","endLine":27,"endColumn":33},{"ruleId":"46","severity":1,"message":"47","line":37,"column":24,"nodeType":"48","messageId":"49","endLine":37,"endColumn":26},{"ruleId":"46","severity":1,"message":"47","line":53,"column":24,"nodeType":"48","messageId":"49","endLine":53,"endColumn":26},{"ruleId":"46","severity":1,"message":"47","line":68,"column":24,"nodeType":"48","messageId":"49","endLine":68,"endColumn":26},{"ruleId":"46","severity":1,"message":"47","line":80,"column":24,"nodeType":"48","messageId":"49","endLine":80,"endColumn":26},{"ruleId":"46","severity":1,"message":"47","line":92,"column":24,"nodeType":"48","messageId":"49","endLine":92,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":123,"column":6,"nodeType":"52","endLine":123,"endColumn":17,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":160,"column":5,"nodeType":"56","messageId":"57","endLine":175,"endColumn":6},{"ruleId":"50","severity":1,"message":"58","line":176,"column":6,"nodeType":"52","endLine":176,"endColumn":53,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":179,"column":32,"nodeType":"62","messageId":"63","endLine":179,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":180,"column":22,"nodeType":"48","messageId":"49","endLine":180,"endColumn":24},{"ruleId":"50","severity":1,"message":"64","line":184,"column":6,"nodeType":"52","endLine":184,"endColumn":14,"suggestions":"65"},"no-unused-vars","'defaultfunction' is assigned a value but never used.","Identifier","unusedVar","'setDefaultfunction' is assigned a value but never used.","'setModifier1' is assigned a value but never used.","'setModifier2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'affliation', 'battel', 'scheme', and 'status'. Either include them or remove the dependency array.","ArrayExpression",["66"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'modifier1' and 'modifier2'. Either include them or remove the dependency array.",["67"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'dataProcess'. Either include it or remove the dependency array.",["68"],{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [affliation, battel, functions, scheme, status]",{"range":"75","text":"76"},"Update the dependencies array to be: [scheme, affliation, battel, status, functions, modifier1, modifier2]",{"range":"77","text":"78"},"Update the dependencies array to be: [battel, dataProcess]",{"range":"79","text":"80"},[3013,3024],"[affliation, battel, functions, scheme, status]",[4209,4256],"[scheme, affliation, battel, status, functions, modifier1, modifier2]",[4411,4419],"[battel, dataProcess]"]